name: "PR Build"
on:
  # Runs on pull-requests against the development branch
  pull_request:
    branches:
      - development

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v4
      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"
      - name: Install dependencies
        run: pnpm install

      # Check if pnpm-lock.yaml has changed and commit the change
      - name: Check for pnpm-lock.yaml changes
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          if [[ $(git status --porcelain pnpm-lock.yaml) ]]; then
            git add pnpm-lock.yaml
            git commit -m "ci: fix pnpm-lock.yaml"

            # Fetch the latest changes from the remote to check for conflicts
            git fetch origin development

            # Attempt to rebase the changes onto the latest development branch
            git rebase origin/development || git rebase --abort

            # Force push the changes if the rebase was successful
            git push --force-with-lease
          fi

      - name: Run linter
        run: npm run lint:all
      - name: Build
        run: npm run build
      - name: Tests
        run: npm run test

  # Package projects to make sure this is not broken upon merge request
  # This is not pushed into docker registry as input "shouldRelease" is not set
  package-landing-page:
    name: "Package landing page"
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build landing page Docker image
        uses: ./.github/actions/build-docker
        with:
          dockerfile: "packages/www/Dockerfile"
          image_name: "${{ vars.DOCKER_USERNAME }}/landing-page"
          ## Tag as pr-<pr-id>
          tags: "pr-${{ github.event.pull_request.number }}"
          shouldRelease: false

  package-client:
    name: "Package client"
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build client Docker image
        uses: ./.github/actions/build-docker
        with:
          dockerfile: "packages/client/Dockerfile"
          image_name: "${{ vars.DOCKER_USERNAME }}/client"
          ## Tag as pr-<pr-id>
          tags: "pr-${{ github.event.pull_request.number }}"
          shouldRelease: false
