name: "Build Docker Image"
description: "Build a Docker image for the specified Dockerfile"

inputs:
  dockerfile:
    description: "Path to the Dockerfile"
    required: true
  image_name:
    description: "Docker image name"
    required: true
  tags:
    description: "Tags to use for the Docker image (comma-separated)"
    required: true
    type: string
  shouldRelease:
    description: "Whether to release the Docker image in the registry"
    required: false
    default: "false"
    type: boolean
  DOCKER_USERNAME:
    description: "Docker username"
    required: true
    type: string
  DOCKER_PASSWORD:
    description: "Docker password"
    required: true
    type: string

runs:
  using: "composite"
  steps:
    - name: Checkout code
      uses: actions/checkout@v2

    ## Builds with a temporary tag to only build once - This tag is not pushed
    - name: Build Docker image
      shell: bash
      run: |
        echo "Building Docker image..."
        docker build -f "${{ inputs.dockerfile }}" -t "${{ inputs.image_name }}:temp" .

    ## Tags with all the provided tags
    - name: Tag Docker image with all tags
      shell: bash
      run: |
        IFS=',' read -r -a tag_array <<< "${{ inputs.tags }}"
        for tag in "${tag_array[@]}"
        do
          echo "Tagging image with tag $tag"
          docker tag "${{ inputs.image_name }}:temp" "${{ inputs.image_name }}:$tag"
        done

    # Only if "shouldRelease" is true, then we should fail if username/password are not provided
    - name: Ensure Docker username and password are provided
      if: inputs.shouldRelease == 'true'
      shell: bash
      run: |
        echo "Ensuring Docker username and password are provided when releasing the Docker image"
        if [ -z "${{ inputs.DOCKER_USERNAME }}" ]; then
          echo "DOCKER_USERNAME is required when shouldRelease is true"
          exit 1
        fi
        if [ -z "${{ inputs.DOCKER_PASSWORD }}" ]; then
          echo "DOCKER_PASSWORD is required when shouldRelease is true"
          exit 1
        fi

    # Login to Docker registry
    - name: Login to Docker registry
      if: inputs.shouldRelease == 'true'
      shell: bash
      run: echo "${{ inputs.DOCKER_PASSWORD }}" | docker login -u "${{ inputs.DOCKER_USERNAME }}" --password-stdin

    - name: Push Docker image with multiple tags
      if: inputs.shouldRelease == 'true'
      shell: bash
      run: |
        for tag in "${tag_array[@]}"
        do
          echo "Pushing image with tag $tag"
          docker push "${{ inputs.image_name }}:$tag"
        done